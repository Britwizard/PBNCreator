# MakePBNfiles
# Version 1 - Initial Version
# This module generates files in pbn (Portable Bridge Notation) format.
# This file contains information about a set of boards containing bridge hands.
# The bridge hands in the set of boards are randomly generated.
# This module uses the double dummy solver module ddstable to generate the optimal results table
# using the Bo Haglund dds algorithm.

import PBNGenRandomHands as gen
import os.path
import math
import PBNdds as ddstable
# from ddstable import ddstable
from pathlib import Path

convert_table1={'a':'10','b':'11','c':'12','d':'13'}
convert_table2={'10':'a','11':'b','12':'c','13':'d'}
vulnerability= ["None","NS","EW","All","NS","EW","All","None","EW","All","None","NS","All","None","NS","EW"]
dealerlist=["N","E","S","W"]
dd_dealer_point = ["N","S","E","W"]
dd_suit=["NT","S","H","D","C"]
dd_suit_wide=["NT"," S"," H"," D"," C"]

"""
Create the DoubleDummyTricks line using the Bo Haglund double dummy solver module(ddstable)
An example of the form of the output from ddstable is: 
{'N': {'S': 4, 'H': 5, 'D': 4, 'C': 1, 'NT': 1}, 'S': {'S': 4, 'H': 5, 'D': 4, 'C': 1, 'NT': 1}, 
'E': {'S': 9, 'H': 8, 'D': 8, 'C': 12, 'NT': 9}, 'W': {'S': 9, 'H': 8, 'D': 9, 'C': 12, 'NT': 9}}
The form of DoubleDummyTricks for this would be:
4541145411988c9989c9
"""
def get_dd_tricks(deal):
    byte_board=deal.encode('utf-8')  # ddstable requires the board description to be in byte format
    dd_array = ddstable.get_ddstable(byte_board)
    double_dummy_tricks=''
    for point in dd_array:
        for suit in dd_suit:
            temp = dd_array[point][suit]
            value=str(temp)
            if temp > 9:
                value=convert_table2[value]
            double_dummy_tricks = double_dummy_tricks + value
    return(double_dummy_tricks)

# This is the function that is called in this module to generate the pbn file for a given date
# The pbn file name is of the form YYMMDD.pbn
def CreatePBNfile(folder_path,file_date,no_of_boards,event,site,passedout):
    return_heading_data={"Event":'X',"Site":'',"PlayDate":''}
    return_hand_data=[]
    return_dd_data=[]
    two_digit_year = file_date.strftime("%y")
    month=file_date.strftime("%m")
    day=file_date.strftime("%d")
    filename = two_digit_year + month + day + ".pbn"
    path=Path(folder_path)
    filepath=os.path.join(path,filename)
    if os.path.exists(filepath):
        return(return_heading_data,return_hand_data,return_dd_data)       # return a '1' in the Event if file already exists          
    file=open(filepath,"w")
    eventdata = event
    sitedata = site
    datedata = day + "." + month + "." + two_digit_year
    return_heading_data['Event']=event
    return_heading_data['Site']=site
    return_heading_data['PlayDate']=datedata
    file.writelines("%This pbn was generated by Peter Ellington's 'PBN Generator' Python program\n")
    for board_no in range(no_of_boards):
        file.writelines(['[Event "' + eventdata +'"]\n','[Site "' + sitedata + '"]\n','[Date "' + datedata + '"]\n','[Board "' + str(board_no + 1) + '"]\n'])
        i=int(math.fmod(board_no,4))
        Dealer = dealerlist[i]
        file.writelines('[Dealer "' + Dealer + '"]\n')
        i=int(math.fmod(board_no,16))
        Vulnerability=vulnerability[i]
        file.writelines('[Vulnerable "' + Vulnerability + '"]\n')
        deal = gen.GenerateRandomHand(Dealer,passedout)
        file.writelines('[Deal ' + '"' + deal + '"]\n')
        return_hand_data.append(deal)
        double_dummy_tricks = get_dd_tricks(deal)
        return_dd_data.append(double_dummy_tricks)
        file.writelines(['[DoubleDummyTricks "' + double_dummy_tricks + '"]\n','[OptimumResultTable "Declarer;Denomination\\2R;Result\\2R"]\n'])
        # Write out the double dummy analysis
        for i in range(20):
            suit1=dd_dealer_point[math.floor(i/5)]
            suit2=dd_suit_wide[int(math.fmod(i,5))]
            tricks_char = double_dummy_tricks[i:i+1]
            if tricks_char.isalpha():
                tricks=convert_table1[tricks_char]
            else:
                tricks= " " + tricks_char
            file.writelines(suit1 + " " + suit2 + " " + tricks +'\n')   
        file.writelines("\n")
# Only write the event,site and date for the first board
        eventdata=""
        sitedata=""
        datedata=""
    file.close()
    # return the data needed to print out the contents of the deal
    return(return_heading_data,return_hand_data,return_dd_data)
            